t <- as.numeric(names(t[which.max(t)]))
x <- x[n == t]
tmp <- NULL
for (i in 1:length(x)) tmp <- rbind(tmp, x[[i]])
x <- as.data.frame(tmp, stringsAsFactors = FALSE)
x <- x[, unlist(lapply(x, function(x) return(length(unique(x)) > 1)))]
j <- which(unlist(lapply(x, function(x) return(all(gsub("[0-9]", "", x) == "")))))
j
names(x)[j]
j <- which(unlist(lapply(x, function(x) return(all(gsub("[0-9]", "", x) == "")))))
names(x) <- gsub(names(x)[j], "collector", names(x))
head(x)
x[, 1]
x[, j] <- as.numeric(x[, j])
head(x)
x[, 1[
x[, 1]
x[, 2]
x[, 3]
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x) > 0)))))
lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x) > 0)
)
)
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
j
x[,j]
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
gsub("^N", "", x[,j])
x[,j] <- gsub("^N", "", x[,j])
x[,j] <- gsub("W", "", x[,j])
i <- 2
x <- readLines(files[i])
x <- strsplit(x, "\t")
n <- unlist(lapply(x, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
x <- x[n == t]
tmp <- NULL
for (i in 1:length(x)) tmp <- rbind(tmp, x[[i]])
x <- as.data.frame(tmp, stringsAsFactors = FALSE)
x <- x[, unlist(lapply(x, function(x) return(length(unique(x)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(x, function(x) return(all(gsub("[0-9]", "", x) == "")))))
names(x) <- gsub(names(x)[j], "collector", names(x))
x[, j] <- as.numeric(x[, j])
# Identify coordinates column:
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
x[,j] <- gsub("^N", "", x[,j])
x[,j] <- gsub("W", "", x[,j])
x[,j]
i <- 2
x <- readLines(files[i])
x <- strsplit(x, "\t")
n <- unlist(lapply(x, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
x <- x[n == t]
tmp <- NULL
for (i in 1:length(x)) tmp <- rbind(tmp, x[[i]])
x <- as.data.frame(tmp, stringsAsFactors = FALSE)
x <- x[, unlist(lapply(x, function(x) return(length(unique(x)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(x, function(x) return(all(gsub("[0-9]", "", x) == "")))))
names(x) <- gsub(names(x)[j], "collector", names(x))
x[, j] <- as.numeric(x[, j])
# Identify coordinates column:
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
x[,j] <- gsub("^N", "", x[,j])
x[,j] <- gsub(" W", ",", x[,j])
x
x[, j]
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
x[,j] <- gsub("^N", "", x[,j])
x[,j] <- gsub(" W", ",", x[,j])
x[,j] <- gsub(" ", "", x[,j])
x[, j]
i <- 2
x <- readLines(files[i])
x <- strsplit(x, "\t")
n <- unlist(lapply(x, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
x <- x[n == t]
tmp <- NULL
for (i in 1:length(x)) tmp <- rbind(tmp, x[[i]])
x <- as.data.frame(tmp, stringsAsFactors = FALSE)
x <- x[, unlist(lapply(x, function(x) return(length(unique(x)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(x, function(x) return(all(gsub("[0-9]", "", x) == "")))))
names(x) <- gsub(names(x)[j], "collector", names(x))
x[, j] <- as.numeric(x[, j])
# Identify coordinates column:
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
x[,j] <- gsub("^N", "", x[,j])
x[,j] <- gsub(" W", ",", x[,j])
x[,j] <- gsub(" ", "", x[,j])
x[,j]
i <- 2
x <- readLines(files[i])
x <- strsplit(x, "\t")
n <- unlist(lapply(x, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
x <- x[n == t]
tmp <- NULL
for (i in 1:length(x)) tmp <- rbind(tmp, x[[i]])
x <- as.data.frame(tmp, stringsAsFactors = FALSE)
x <- x[, unlist(lapply(x, function(x) return(length(unique(x)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(x, function(x) return(all(gsub("[0-9]", "", x) == "")))))
names(x) <- gsub(names(x)[j], "collector", names(x))
x[, j] <- as.numeric(x[, j])
# Identify coordinates column:
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
x[,j] <- gsub("^N", "", x[,j])
x[,j] <- gsub(" W", ",", x[,j])
x[,j] <- gsub(" ", "", x[,j])
x$latitude <- unlist(lapply(strsplit(x[,j], ","), function(x) x[1]))
x$latitude
i <- 2
x <- readLines(files[i])
x <- strsplit(x, "\t")
n <- unlist(lapply(x, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
x <- x[n == t]
tmp <- NULL
for (i in 1:length(x)) tmp <- rbind(tmp, x[[i]])
x <- as.data.frame(tmp, stringsAsFactors = FALSE)
x <- x[, unlist(lapply(x, function(x) return(length(unique(x)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(x, function(x) return(all(gsub("[0-9]", "", x) == "")))))
names(x) <- gsub(names(x)[j], "collector", names(x))
x[, j] <- as.numeric(x[, j])
# Identify coordinates column:
j <- which(unlist(lapply(x, function(x) return(length(grep("^N[0-9][0-9]", x)) > 0))))
x[,j] <- gsub("^N", "", x[,j])
x[,j] <- gsub(" W", ",", x[,j])
x[,j] <- gsub(" ", "", x[,j])
x$latitude <- as.numeric(unlist(lapply(strsplit(x[,j], ","), function(x) x[1])))
x$longitude <- -as.numeric(unlist(lapply(strsplit(x[,j], ","), function(x) x[2])))
x
which(unlist(lapply(x, function(x) return(length(grep("albert", tolower(x))) > 0))))
j <- which(unlist(lapply(x, function(x) return(length(grep("albert", tolower(x))) > 0))))
x[, j]
source('~/.active-rstudio-document', echo=TRUE)
x
library(gulf.spatial)
source('~/.active-rstudio-document', echo=TRUE)
x
head(x)
j <- which(unlist(lapply(x, function(x) return(length(grep("[0-9]:[0-9][0-9]", tolower(x))) > 0))))
j
x[, j]
x[, j[1]]
x[, j[2]]
j <- which(unlist(lapply(x, function(x) return(length(grep("[0-9]:[0-9][0-9]", x)) == length(x)))))
j
j <- which(unlist(lapply(x, function(x) return(length(grep("[0-9]:[0-9][0-9]", x)) == 0.5  * length(x)))))
j
j <- which(unlist(lapply(x, function(x) return(length(grep("[0-9]:[0-9][0-9]", x)) >= 0.5  * length(x)))))
j
j <- which(unlist(lapply(x, function(x) return(length(grep("[0-9]:[0-9][0-9]", x)) >= 0.5  * length(x)))))
names(x) <- gsub(names(x)[j], "date", names(x))
x$date
j <- which(unlist(lapply(x, function(x) return(length(grep("[0-9]:[0-9][0-9]", x)) >= 0.5  * length(x)))))
names(x) <- gsub(names(x)[j], "date", names(x))
strsplit(x$date, " ")
# Identify date column:
j <- which(unlist(lapply(x, function(x) return(length(grep("[0-9]:[0-9][0-9]", x)) >= 0.5  * length(x)))))
names(x) <- gsub(names(x)[j], "date", names(x))
unlist(lapply(strsplit(x$date, " "), function(x) x[1]))
x$date <- unlist(lapply(strsplit(x$date, " "), function(x) x[1]))
source('~/.active-rstudio-document', echo=TRUE)
x
source('~/.active-rstudio-document', echo=TRUE)
head(x)
source('~/.active-rstudio-document', echo=TRUE)
x
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
vars <- c("year", "site", "collector", "condition", "comment")
# Load lobster larvae collector table:
x <- read.csv("https://raw.github.com/TobieSurette/lobster-collectors/master/data/raw/129_Collector_Table_08_18.csv", stringsAsFactors = FALSE)
names(x) <- tolower(names(x))
x
locate(file  = "129_Collector_Table_08_18.csv")
file <- locate(file = "129_Collector_Table_08_18.csv")
x <- read.csv(locate(file = "129_Collector_Table_08_18.csv"), stringsAsFactors = FALSE)
x
x$Ret_Comments
head(x)
x <- read.csv(locate(file = "129_Collector_Table_08_18.csv"), stringsAsFactors = FALSE)
names(x) <- tolower(names(x))
# Change field names:
str <- names(x)
str[str == "site_name"] <- "site"
str[str == "r_year"] <- "year"
str[str == "coll_no"] <- "collector"
str[str == "ret_comments"] <- "comment"
str[str == "cond_ret"] <- "condition"
names(x) <- str
head(x)
getwd()
paste0(getwd(), "data/collector.csv")
paste0(getwd(), "/data/collector.csv")
file <- paste0(getwd(), "/data/collector.csv")
file
# Load lobster larvae collector table:
file <- locate(file = "129_Collector_Table_08_18.csv")
x <- read.csv(file, stringsAsFactors = FALSE)
names(x) <- tolower(names(x))
# Change field names:
str <- names(x)
str[str == "site_name"] <- "site"
str[str == "r_year"] <- "year"
str[str == "coll_no"] <- "collector"
str[str == "ret_comments"] <- "comment"
str[str == "cond_ret"] <- "condition"
names(x) <- str
# Collector condition table:
conditions <- c("OK", "<1/2", ">1/2", "Damaged", "Lost")
x$condition <- conditions[x$condition]
# Remove irrelevant fields:
x <- x[vars]
file
file <- locate(file = "129_Collector_Table_08_18.csv")
strsplit(file, "/raw")
strsplit(file, "/raw")[[1]][1]
paste0(strsplit(file, "/raw")[[1]][1], "/data/collector.csv")
# Define variables to keep in the output:
vars <- c("year", "site", "collector", "condition", "comment")
# Load lobster larvae collector table:
file <- locate(file = "129_Collector_Table_08_18.csv")
x <- read.csv(file, stringsAsFactors = FALSE)
names(x) <- tolower(names(x))
# Change field names:
str <- names(x)
str[str == "site_name"] <- "site"
str[str == "r_year"] <- "year"
str[str == "coll_no"] <- "collector"
str[str == "ret_comments"] <- "comment"
str[str == "cond_ret"] <- "condition"
names(x) <- str
# Collector condition table:
conditions <- c("OK", "<1/2", ">1/2", "Damaged", "Lost")
x$condition <- conditions[x$condition]
# Remove irrelevant fields:
x <- x[vars]
# Write to file:
file <- paste0(strsplit(file, "/raw")[[1]][1], "/collector.csv")
file
files <- locate(file = "Collector_coordinates")
files
i = 1
library(gulf.utils)
library(gulf.spatial)
# Define variables to keep in the output:
vars <- c("year", "site", "collector", "condition", "comment")
# Load lobster larvae collector table:
file <- locate(file = "129_Collector_Table_08_18.csv")
x <- read.csv(file, stringsAsFactors = FALSE)
names(x) <- tolower(names(x))
# Change field names:
str <- names(x)
str[str == "site_name"] <- "site"
str[str == "r_year"] <- "year"
str[str == "coll_no"] <- "collector"
str[str == "ret_comments"] <- "comment"
str[str == "cond_ret"] <- "condition"
names(x) <- str
# Collector condition table:
conditions <- c("OK", "<1/2", ">1/2", "Damaged", "Lost")
x$condition <- conditions[x$condition]
# Remove irrelevant fields:
x <- x[vars]
# Load coordinate data:
files <- locate(file = "Collector_coordinates")
head(x)
i
y <- readLines(files[i])
y <- strsplit(y, "\t")
n <- unlist(lapply(y, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
y <- y[n == t]
tmp <- NULL
for (i in 1:length(y)) tmp <- rbind(tmp, y[[i]])
y <- as.data.frame(tmp, stringsAsFactors = FALSE)
y <- y[, unlist(lapply(y, function(y) return(length(unique(y)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(y, function(y) return(all(gsub("[0-9]", "", y) == "")))))
names(y) <- gsub(names(y)[j], "collector", names(y))
y[, j] <- as.numeric(y[, j])
# Identify coordinates column:
j <- which(unlist(lapply(y, function(y) return(length(grep("^N[0-9][0-9]", y)) > 0))))
y[,j] <- gsub("^N", "", y[,j])
y[,j] <- gsub(" W", ",", y[,j])
y[,j] <- gsub(" ", "", y[,j])
y$latitude <- dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[1]))))
y$longitude <- -dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[2]))))
# Identify site column:
j <- which(unlist(lapply(y, function(y) return(length(grep("albert", tolower(y))) > 0))))
names(y) <- gsub(names(y)[j], "site", names(y))
# Identify date column:
j <- which(unlist(lapply(y, function(y) return(length(grep("[0-9]:[0-9][0-9]", y)) >= 0.5  * length(y)))))
names(y) <- gsub(names(y)[j], "date", names(y))
y$date <- unlist(lapply(strsplit(y$date, " "), function(y) y[1]))
# Remove irrelvant fields:
y <- y[, -grep("^V[0-9]", names(y))]
head(y)
match(y$collector, x$collector)
x$longitude <- NA
x$latitude <- NA
x$site2 <- ""
# Load coordinate data:
files <- locate(file = "Collector_coordinates")
for (i in 1:4){
y <- readLines(files[i])
y <- strsplit(y, "\t")
n <- unlist(lapply(y, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
y <- y[n == t]
tmp <- NULL
for (i in 1:length(y)) tmp <- rbind(tmp, y[[i]])
y <- as.data.frame(tmp, stringsAsFactors = FALSE)
y <- y[, unlist(lapply(y, function(y) return(length(unique(y)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(y, function(y) return(all(gsub("[0-9]", "", y) == "")))))
names(y) <- gsub(names(y)[j], "collector", names(y))
y[, j] <- as.numeric(y[, j])
# Identify coordinates column:
j <- which(unlist(lapply(y, function(y) return(length(grep("^N[0-9][0-9]", y)) > 0))))
y[,j] <- gsub("^N", "", y[,j])
y[,j] <- gsub(" W", ",", y[,j])
y[,j] <- gsub(" ", "", y[,j])
y$latitude <- dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[1]))))
y$longitude <- -dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[2]))))
# Identify site column:
j <- which(unlist(lapply(y, function(y) return(length(grep("albert", tolower(y))) > 0))))
names(y) <- gsub(names(y)[j], "site", names(y))
# Identify date column:
j <- which(unlist(lapply(y, function(y) return(length(grep("[0-9]:[0-9][0-9]", y)) >= 0.5  * length(y)))))
names(y) <- gsub(names(y)[j], "date", names(y))
y$date <- unlist(lapply(strsplit(y$date, " "), function(y) y[1]))
# Remove irrelvant fields:
y <- y[, -grep("^V[0-9]", names(y))]
# Merge with collector table:
ix <- match(y$collector, x$collector)
x$longitude[ix] <- y$longitude
x$latitude[ix] <- y$latitude
x$site2[ix] <- y$site
}
i
library(gulf.utils)
library(gulf.spatial)
# Define variables to keep in the output:
vars <- c("year", "site", "collector", "condition", "comment")
# Load lobster larvae collector table:
file <- locate(file = "129_Collector_Table_08_18.csv")
x <- read.csv(file, stringsAsFactors = FALSE)
names(x) <- tolower(names(x))
# Change field names:
str <- names(x)
str[str == "site_name"] <- "site"
str[str == "r_year"] <- "year"
str[str == "coll_no"] <- "collector"
str[str == "ret_comments"] <- "comment"
str[str == "cond_ret"] <- "condition"
names(x) <- str
# Collector condition table:
conditions <- c("OK", "<1/2", ">1/2", "Damaged", "Lost")
x$condition <- conditions[x$condition]
# Remove irrelevant fields:
x <- x[vars]
x$longitude <- NA
x$latitude <- NA
x$site2 <- ""
# Load coordinate data:
files <- locate(file = "Collector_coordinates")
for (i in 1:4){
y <- readLines(files[i])
y <- strsplit(y, "\t")
n <- unlist(lapply(y, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
y <- y[n == t]
tmp <- NULL
for (j in 1:length(y)) tmp <- rbind(tmp, y[[j]])
y <- as.data.frame(tmp, stringsAsFactors = FALSE)
y <- y[, unlist(lapply(y, function(y) return(length(unique(y)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(y, function(y) return(all(gsub("[0-9]", "", y) == "")))))
names(y) <- gsub(names(y)[j], "collector", names(y))
y[, j] <- as.numeric(y[, j])
# Identify coordinates column:
j <- which(unlist(lapply(y, function(y) return(length(grep("^N[0-9][0-9]", y)) > 0))))
y[,j] <- gsub("^N", "", y[,j])
y[,j] <- gsub(" W", ",", y[,j])
y[,j] <- gsub(" ", "", y[,j])
y$latitude <- dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[1]))))
y$longitude <- -dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[2]))))
# Identify site column:
j <- which(unlist(lapply(y, function(y) return(length(grep("albert", tolower(y))) > 0))))
names(y) <- gsub(names(y)[j], "site", names(y))
# Identify date column:
j <- which(unlist(lapply(y, function(y) return(length(grep("[0-9]:[0-9][0-9]", y)) >= 0.5  * length(y)))))
names(y) <- gsub(names(y)[j], "date", names(y))
y$date <- unlist(lapply(strsplit(y$date, " "), function(y) y[1]))
# Remove irrelvant fields:
y <- y[, -grep("^V[0-9]", names(y))]
# Merge with collector table:
ix <- match(y$collector, x$collector)
x$longitude[ix] <- y$longitude
x$latitude[ix] <- y$latitude
x$site2[ix] <- y$site
}
i
match(y$collector, x$collector)
y$collector
ix <- match(y$collector, x$collector)
y$longitude
y$latitude
ix <- match(y$collector, x$collector)
x$longitude[ix] <- y$longitude
x$latitude[ix] <- y$latitude
x$site2[ix] <- y$site
ix <- match(y$collector, x$collector)
x$longitude[ix[!is.na(ix)]] <- y$longitude[!is.na(ix)]
x$latitude[ix[!is.na(ix)]] <- y$latitude[!is.na(ix)]
x$site2[ix[!is.na(ix)]] <- y$site[!is.na(ix)]
library(gulf.utils)
library(gulf.spatial)
# Define variables to keep in the output:
vars <- c("year", "site", "collector", "condition", "comment")
# Load lobster larvae collector table:
file <- locate(file = "129_Collector_Table_08_18.csv")
x <- read.csv(file, stringsAsFactors = FALSE)
names(x) <- tolower(names(x))
# Change field names:
str <- names(x)
str[str == "site_name"] <- "site"
str[str == "r_year"] <- "year"
str[str == "coll_no"] <- "collector"
str[str == "ret_comments"] <- "comment"
str[str == "cond_ret"] <- "condition"
names(x) <- str
# Collector condition table:
conditions <- c("OK", "<1/2", ">1/2", "Damaged", "Lost")
x$condition <- conditions[x$condition]
# Remove irrelevant fields:
x <- x[vars]
x$longitude <- NA
x$latitude <- NA
x$site2 <- ""
# Load coordinate data:
files <- locate(file = "Collector_coordinates")
for (i in 1:4){
y <- readLines(files[i])
y <- strsplit(y, "\t")
n <- unlist(lapply(y, length))
t <- table(n)
t <- t[as.numeric(names(t)) > 1]
t <- as.numeric(names(t[which.max(t)]))
y <- y[n == t]
tmp <- NULL
for (j in 1:length(y)) tmp <- rbind(tmp, y[[j]])
y <- as.data.frame(tmp, stringsAsFactors = FALSE)
y <- y[, unlist(lapply(y, function(y) return(length(unique(y)) > 1)))]
# Identify collector column:
j <- which(unlist(lapply(y, function(y) return(all(gsub("[0-9]", "", y) == "")))))
names(y) <- gsub(names(y)[j], "collector", names(y))
y[, j] <- as.numeric(y[, j])
# Identify coordinates column:
j <- which(unlist(lapply(y, function(y) return(length(grep("^N[0-9][0-9]", y)) > 0))))
y[,j] <- gsub("^N", "", y[,j])
y[,j] <- gsub(" W", ",", y[,j])
y[,j] <- gsub(" ", "", y[,j])
y$latitude <- dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[1]))))
y$longitude <- -dmm2deg(as.numeric(unlist(lapply(strsplit(y[,j], ","), function(y) y[2]))))
# Identify site column:
j <- which(unlist(lapply(y, function(y) return(length(grep("albert", tolower(y))) > 0))))
names(y) <- gsub(names(y)[j], "site", names(y))
# Identify date column:
j <- which(unlist(lapply(y, function(y) return(length(grep("[0-9]:[0-9][0-9]", y)) >= 0.5  * length(y)))))
names(y) <- gsub(names(y)[j], "date", names(y))
y$date <- unlist(lapply(strsplit(y$date, " "), function(y) y[1]))
# Remove irrelvant fields:
y <- y[, -grep("^V[0-9]", names(y))]
# Merge with collector table:
ix <- match(y$collector, x$collector)
x$longitude[ix[!is.na(ix)]] <- y$longitude[!is.na(ix)]
x$latitude[ix[!is.na(ix)]] <- y$latitude[!is.na(ix)]
x$site2[ix[!is.na(ix)]] <- y$site[!is.na(ix)]
}
x
options(max.print = 20000)
x
x$longitude
x$latitude
table(x$site, x$site2)
head(x)
